name: CI - VoiceCart

# Trigger CI on push to any branch and all pull requests
on:
  push:
    branches: ['**']
  pull_request:
    branches: [master, develop]

jobs:
  # Job 1: Lint and Type Check
  lint-and-typecheck:
    name: 🔍 Lint & Type Check
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔍 Run ESLint
        run: npm run lint
        continue-on-error: false

      - name: 🔍 TypeScript type check
        run: npx tsc --noEmit
        continue-on-error: false

  # Job 2: Unit Tests
  test:
    name: 🧪 Unit Tests
    runs-on: ubuntu-latest
    needs: lint-and-typecheck

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🧪 Run tests
        run: npm test -- --coverage --watchAll=false

      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/coverage-final.json
          flags: unittests
          name: voicecart-coverage
          fail_ci_if_error: false

  # Job 3: Build Android (optional for now)
  # Uncomment when ready to test builds in CI
  # build-android:
  #   name: 🏗️ Build Android APK
  #   runs-on: ubuntu-latest
  #   needs: test
  #
  #   steps:
  #     - name: 📥 Checkout code
  #       uses: actions/checkout@v4
  #
  #     - name: 📦 Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '18'
  #         cache: 'npm'
  #
  #     - name: ☕ Setup Java
  #       uses: actions/setup-java@v3
  #       with:
  #         distribution: 'zulu'
  #         java-version: '17'
  #
  #     - name: 📥 Install dependencies
  #       run: npm ci
  #
  #     - name: 🏗️ Build Android APK
  #       run: |
  #         cd android
  #         ./gradlew assembleDebug
  #
  #     - name: 📦 Upload APK artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: voicecart-debug.apk
  #         path: android/app/build/outputs/apk/debug/app-debug.apk

  # Job 4: PR Comment (for PR context)
  pr-comment:
    name: 💬 PR Comment
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, test]
    if: github.event_name == 'pull_request'

    steps:
      - name: 💬 Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ All checks passed! Code is ready for review. 🚀'
            })
